// src/pages/projects/Psyche.jsx
import React from "react";
import { MotionDiv as motion } from "../../utils/AnimationFallback";
import BackToHome from "../../components/BackToHome";

export default function Psyche() {
  return (
    <section className="min-h-screen py-16 px-6 bg-white">
      <div className="max-w-5xl mx-auto">
        <BackToHome />
        <motion.h1 
          className="text-4xl font-bold mb-4"
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
        >
          L'√¢ge de Psych√©
        </motion.h1>

        <motion.p
          className="text-gray-600 mb-8 text-lg"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.2, duration: 0.6 }}
        >
          Adaptation num√©rique d'un jeu de soci√©t√© avec une architecture MVC et g√©n√©ration dynamique de cartes.
        </motion.p>

        <motion.img 
          src="/assets/age_psych√©/img_app_age_psyche.png"
          alt="Capture d'√©cran du jeu L'√¢ge de Psych√©"
          className="rounded-lg shadow mb-10 w-full object-cover"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.3, duration: 0.6 }}
          onError={(e) => {
            e.target.src = "https://via.placeholder.com/900x400?text=Image+non+trouv√©e";
            e.target.onerror = null;
          }}
        />

        <motion.div
          className="space-y-6"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.4, duration: 0.6 }}
        >
          <div>
            <h2 className="text-2xl font-semibold mb-2">Description du projet</h2>
            <p className="text-gray-700">
              "L'√¢ge de Psych√©" est une adaptation num√©rique d'un jeu de soci√©t√© original. Ce projet r√©alis√© en √©quipe
              pendant ma formation consistait √† transformer un jeu de plateau en une application Java enti√®rement 
              interactive. Le jeu met en sc√®ne diff√©rents personnages √©voluant sur une carte g√©n√©r√©e dynamiquement, 
              o√π les joueurs doivent accomplir des qu√™tes et collecter des ressources pour progresser.
            </p>
          </div>

          <div>
            <h2 className="text-2xl font-semibold mb-2">Fonctionnalit√©s principales</h2>
            <ul className="list-disc list-inside text-gray-700">
              <li>G√©n√©ration proc√©durale de la carte de jeu √† chaque nouvelle partie</li>
              <li>Syst√®me de tour par tour avec diff√©rentes actions possibles</li>
              <li>Gestion de ressources et d'inventaire pour chaque joueur</li>
              <li>Syst√®me de qu√™tes avec progression et r√©compenses</li>
              <li>Intelligence artificielle pour les personnages non-joueurs (PNJ)</li>
              <li>Interface graphique responsive avec animations</li>
              <li>Syst√®me de sauvegarde et chargement des parties</li>
              <li>Mode multijoueur local (jusqu'√† 4 joueurs)</li>
            </ul>
          </div>

          <div>
            <h2 className="text-2xl font-semibold mb-2">Mon r√¥le</h2>
            <p className="text-gray-700">
              Au sein de l'√©quipe de d√©veloppement, j'ai principalement travaill√© sur :
            </p>
            <ul className="list-disc list-inside text-gray-700">
              <li>L'architecture MVC (Mod√®le-Vue-Contr√¥leur) du projet</li>
              <li>L'algorithme de g√©n√©ration proc√©durale de la carte</li>
              <li>Le syst√®me de d√©placement des personnages</li>
              <li>L'impl√©mentation des r√®gles du jeu dans le moteur de jeu</li>
              <li>La collaboration avec l'√©quipe via Git et les r√©unions hebdomadaires</li>
            </ul>
          </div>

          <div>
            <h2 className="text-2xl font-semibold mb-2">Stack technique</h2>
            <ul className="list-disc list-inside text-gray-700">
              <li>Java</li>
              <li>Swing pour l'interface graphique</li>
              <li>Architecture MVC</li>
              <li>Algorithmes de g√©n√©ration proc√©durale</li>
              <li>GitLab pour la gestion de version</li>
              <li>JUnit pour les tests unitaires</li>
            </ul>
          </div>

          <div>
            <h2 className="text-2xl font-semibold mb-2">D√©fis et solutions</h2>
            <p className="text-gray-700">
              Le principal d√©fi technique de ce projet a √©t√© la cr√©ation d'un algorithme de g√©n√©ration de carte
              qui soit √† la fois al√©atoire et √©quilibr√© pour le gameplay. Nous avons r√©solu ce probl√®me en 
              impl√©mentant un syst√®me bas√© sur les automates cellulaires, combin√© √† des r√®gles sp√©cifiques pour 
              garantir l'accessibilit√© de toutes les zones. Un autre d√©fi √©tait la synchronisation des actions 
              entre les diff√©rents joueurs, que nous avons r√©solu en impl√©mentant un pattern Observer pour maintenir 
              la coh√©rence de l'√©tat du jeu.
            </p>
          </div>

          <div>
            <h2 className="text-2xl font-semibold mb-2">Le√ßons apprises</h2>
            <p className="text-gray-700">
              Ce projet m'a permis d'approfondir ma compr√©hension de l'architecture MVC et de l'importance d'une 
              conception solide avant l'impl√©mentation. J'ai √©galement am√©lior√© mes comp√©tences en mati√®re de 
              travail d'√©quipe et de gestion de code partag√© gr√¢ce √† l'utilisation intensive de Git. La phase 
              de test a √©t√© particuli√®rement enrichissante, car elle nous a permis d'identifier et de corriger des 
              bugs complexes li√©s aux interactions entre les diff√©rents composants du jeu.
            </p>
          </div>

          <div className="mt-6 flex gap-4">
            <a 
              href="https://github.com/A1exPrdgc/SAE-2.01---application-final" 
              target="_blank" 
              rel="noopener noreferrer"
              className="inline-block px-6 py-3 bg-gray-100 hover:bg-gray-200 border border-gray-300 rounded text-sm font-medium"
            >
              <span role="img" aria-label="Lien">üîó</span> Voir le code sur GitHub
            </a>
            <button 
              onClick={() => alert("T√©l√©chargement non disponible pour le moment")}
              className="inline-block px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded text-sm font-medium"
            >
              <span role="img" aria-label="T√©l√©charger">üì•</span> T√©l√©charger le jeu
            </button>
          </div>
        </motion.div>
      </div>
    </section>
  );
}
