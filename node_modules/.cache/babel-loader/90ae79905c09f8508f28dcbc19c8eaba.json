{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar motionUtils = require('motion-utils');\nconst supportsScrollTimeline = /* @__PURE__ */motionUtils.memo(() => window.ScrollTimeline !== undefined);\nclass GroupAnimation {\n  constructor(animations) {\n    // Bound to accomodate common `return animation.stop` pattern\n    this.stop = () => this.runAll(\"stop\");\n    this.animations = animations.filter(Boolean);\n  }\n  get finished() {\n    return Promise.all(this.animations.map(animation => animation.finished));\n  }\n  /**\n   * TODO: Filter out cancelled or stopped animations before returning\n   */\n  getAll(propName) {\n    return this.animations[0][propName];\n  }\n  setAll(propName, newValue) {\n    for (let i = 0; i < this.animations.length; i++) {\n      this.animations[i][propName] = newValue;\n    }\n  }\n  attachTimeline(timeline, fallback) {\n    const subscriptions = this.animations.map(animation => {\n      if (supportsScrollTimeline() && animation.attachTimeline) {\n        return animation.attachTimeline(timeline);\n      } else if (typeof fallback === \"function\") {\n        return fallback(animation);\n      }\n    });\n    return () => {\n      subscriptions.forEach((cancel, i) => {\n        cancel && cancel();\n        this.animations[i].stop();\n      });\n    };\n  }\n  get time() {\n    return this.getAll(\"time\");\n  }\n  set time(time) {\n    this.setAll(\"time\", time);\n  }\n  get speed() {\n    return this.getAll(\"speed\");\n  }\n  set speed(speed) {\n    this.setAll(\"speed\", speed);\n  }\n  get startTime() {\n    return this.getAll(\"startTime\");\n  }\n  get duration() {\n    let max = 0;\n    for (let i = 0; i < this.animations.length; i++) {\n      max = Math.max(max, this.animations[i].duration);\n    }\n    return max;\n  }\n  runAll(methodName) {\n    this.animations.forEach(controls => controls[methodName]());\n  }\n  flatten() {\n    this.runAll(\"flatten\");\n  }\n  play() {\n    this.runAll(\"play\");\n  }\n  pause() {\n    this.runAll(\"pause\");\n  }\n  cancel() {\n    this.runAll(\"cancel\");\n  }\n  complete() {\n    this.runAll(\"complete\");\n  }\n}\nclass GroupAnimationWithThen extends GroupAnimation {\n  then(onResolve, _onReject) {\n    return this.finished.finally(onResolve).then(() => {});\n  }\n}\nconst isCSSVar = name => name.startsWith(\"--\");\nconst style$1 = {\n  set: (element, name, value) => {\n    isCSSVar(name) ? element.style.setProperty(name, value) : element.style[name] = value;\n  },\n  get: (element, name) => {\n    return isCSSVar(name) ? element.style.getPropertyValue(name) : element.style[name];\n  }\n};\nconst isNotNull = value => value !== null;\nfunction getFinalKeyframe(keyframes, _ref, finalKeyframe) {\n  let {\n    repeat,\n    repeatType = \"loop\"\n  } = _ref;\n  const resolvedKeyframes = keyframes.filter(isNotNull);\n  const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1 ? 0 : resolvedKeyframes.length - 1;\n  return !index || finalKeyframe === undefined ? resolvedKeyframes[index] : finalKeyframe;\n}\nconst supportsPartialKeyframes = /*@__PURE__*/motionUtils.memo(() => {\n  try {\n    document.createElement(\"div\").animate({\n      opacity: [1]\n    });\n  } catch (e) {\n    return false;\n  }\n  return true;\n});\nconst pxValues = new Set([\n// Border props\n\"borderWidth\", \"borderTopWidth\", \"borderRightWidth\", \"borderBottomWidth\", \"borderLeftWidth\", \"borderRadius\", \"radius\", \"borderTopLeftRadius\", \"borderTopRightRadius\", \"borderBottomRightRadius\", \"borderBottomLeftRadius\",\n// Positioning props\n\"width\", \"maxWidth\", \"height\", \"maxHeight\", \"top\", \"right\", \"bottom\", \"left\",\n// Spacing props\n\"padding\", \"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\", \"margin\", \"marginTop\", \"marginRight\", \"marginBottom\", \"marginLeft\",\n// Misc\n\"backgroundPositionX\", \"backgroundPositionY\"]);\nfunction hydrateKeyframes(element, name, keyframes, pseudoElement) {\n  if (!Array.isArray(keyframes)) {\n    keyframes = [keyframes];\n  }\n  for (let i = 0; i < keyframes.length; i++) {\n    if (keyframes[i] === null) {\n      keyframes[i] = i === 0 && !pseudoElement ? style$1.get(element, name) : keyframes[i - 1];\n    }\n    if (typeof keyframes[i] === \"number\" && pxValues.has(name)) {\n      keyframes[i] = keyframes[i] + \"px\";\n    }\n  }\n  if (!pseudoElement && !supportsPartialKeyframes() && keyframes.length < 2) {\n    keyframes.unshift(style$1.get(element, name));\n  }\n  return keyframes;\n}\nconst activeAnimations = {\n  layout: 0,\n  mainThread: 0,\n  waapi: 0\n};\nconst statsBuffer = {\n  value: null,\n  addProjectionMetrics: null\n};\nconst isBezierDefinition = easing => Array.isArray(easing) && typeof easing[0] === \"number\";\n\n/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\nfunction memoSupports(callback, supportsFlag) {\n  const memoized = motionUtils.memo(callback);\n  return () => supportsFlags[supportsFlag] ?? memoized();\n}\nconst supportsLinearEasing = /*@__PURE__*/memoSupports(() => {\n  try {\n    document.createElement(\"div\").animate({\n      opacity: 0\n    }, {\n      easing: \"linear(0, 1)\"\n    });\n  } catch (e) {\n    return false;\n  }\n  return true;\n}, \"linearEasing\");\nconst generateLinearEasing = function (easing, duration) {\n  let resolution = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n  let points = \"\";\n  const numPoints = Math.max(Math.round(duration / resolution), 2);\n  for (let i = 0; i < numPoints; i++) {\n    points += easing(i / (numPoints - 1)) + \", \";\n  }\n  return `linear(${points.substring(0, points.length - 2)})`;\n};\nconst cubicBezierAsString = _ref2 => {\n  let [a, b, c, d] = _ref2;\n  return `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n};\nconst supportedWaapiEasing = {\n  linear: \"linear\",\n  ease: \"ease\",\n  easeIn: \"ease-in\",\n  easeOut: \"ease-out\",\n  easeInOut: \"ease-in-out\",\n  circIn: /*@__PURE__*/cubicBezierAsString([0, 0.65, 0.55, 1]),\n  circOut: /*@__PURE__*/cubicBezierAsString([0.55, 0, 1, 0.45]),\n  backIn: /*@__PURE__*/cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n  backOut: /*@__PURE__*/cubicBezierAsString([0.33, 1.53, 0.69, 0.99])\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n  if (!easing) {\n    return undefined;\n  } else if (typeof easing === \"function\" && supportsLinearEasing()) {\n    return generateLinearEasing(easing, duration);\n  } else if (isBezierDefinition(easing)) {\n    return cubicBezierAsString(easing);\n  } else if (Array.isArray(easing)) {\n    return easing.map(segmentEasing => mapEasingToNativeEasing(segmentEasing, duration) || supportedWaapiEasing.easeOut);\n  } else {\n    return supportedWaapiEasing[easing];\n  }\n}\nfunction startWaapiAnimation(element, valueName, keyframes) {\n  let {\n    delay = 0,\n    duration = 300,\n    repeat = 0,\n    repeatType = \"loop\",\n    ease = \"easeInOut\",\n    times\n  } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  let pseudoElement = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n  const keyframeOptions = {\n    [valueName]: keyframes\n  };\n  if (times) keyframeOptions.offset = times;\n  const easing = mapEasingToNativeEasing(ease, duration);\n  /**\n   * If this is an easing array, apply to keyframes, not animation as a whole\n   */\n  if (Array.isArray(easing)) keyframeOptions.easing = easing;\n  if (statsBuffer.value) {\n    activeAnimations.waapi++;\n  }\n  const animation = element.animate(keyframeOptions, {\n    delay,\n    duration,\n    easing: !Array.isArray(easing) ? easing : \"linear\",\n    fill: \"both\",\n    iterations: repeat + 1,\n    direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    pseudoElement\n  });\n  if (statsBuffer.value) {\n    animation.finished.finally(() => {\n      activeAnimations.waapi--;\n    });\n  }\n  return animation;\n}\nfunction isGenerator(type) {\n  return typeof type === \"function\" && \"applyToOptions\" in type;\n}\nfunction applyGeneratorOptions(_ref3) {\n  let {\n    type,\n    ...options\n  } = _ref3;\n  if (isGenerator(type)) {\n    return type.applyToOptions(options);\n  } else {\n    options.duration ?? (options.duration = 300);\n    options.ease ?? (options.ease = \"easeOut\");\n  }\n  return options;\n}\nconst animationMaps = new WeakMap();\nconst animationMapKey = (name, pseudoElement) => `${name}:${pseudoElement}`;\nfunction getAnimationMap(element) {\n  const map = animationMaps.get(element) || new Map();\n  animationMaps.set(element, map);\n  return map;\n}\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation {\n  constructor(options) {\n    /**\n     * If we already have an animation, we don't need to instantiate one\n     * and can just use this as a controls interface.\n     */\n    if (\"animation\" in options) {\n      this.animation = options.animation;\n      return;\n    }\n    const {\n      element,\n      name,\n      keyframes: unresolvedKeyframes,\n      pseudoElement,\n      allowFlatten = false\n    } = options;\n    let {\n      transition\n    } = options;\n    this.isPseudoElement = Boolean(pseudoElement);\n    this.allowFlatten = allowFlatten;\n    /**\n     * Stop any existing animations on the element before reading existing keyframes.\n     *\n     * TODO: Check for VisualElement before using animation state. This is a fallback\n     * for mini animate(). Do this when implementing NativeAnimationExtended.\n     */\n    const animationMap = getAnimationMap(element);\n    const key = animationMapKey(name, pseudoElement || \"\");\n    const currentAnimation = animationMap.get(key);\n    currentAnimation && currentAnimation.stop();\n    /**\n     * TODO: If these keyframes aren't correctly hydrated then we want to throw\n     * run an instant animation.\n     */\n    const keyframes = hydrateKeyframes(element, name, unresolvedKeyframes, pseudoElement);\n    motionUtils.invariant(typeof transition.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n    transition = applyGeneratorOptions(transition);\n    this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n    if (transition.autoplay === false) {\n      this.animation.pause();\n    }\n    this.removeAnimation = () => animationMap.delete(key);\n    this.animation.onfinish = () => {\n      if (!pseudoElement) {\n        style$1.set(element, name, getFinalKeyframe(keyframes, transition));\n        this.cancel();\n      }\n    };\n    /**\n     * TODO: Check for VisualElement before using animation state.\n     */\n    animationMap.set(key, this);\n  }\n  play() {\n    this.animation.play();\n  }\n  pause() {\n    this.animation.pause();\n  }\n  complete() {\n    this.animation.finish();\n  }\n  cancel() {\n    try {\n      this.animation.cancel();\n    } catch (e) {}\n    this.removeAnimation();\n  }\n  stop() {\n    const {\n      state\n    } = this;\n    if (state === \"idle\" || state === \"finished\") {\n      return;\n    }\n    this.commitStyles();\n    this.cancel();\n  }\n  /**\n   * WAAPI doesn't natively have any interruption capabilities.\n   *\n   * In this method, we commit styles back to the DOM before cancelling\n   * the animation.\n   *\n   * This is designed to be overridden by NativeAnimationExtended, which\n   * will create a renderless JS animation and sample it twice to calculate\n   * its current value, \"previous\" value, and therefore allow\n   * Motion to also correctly calculate velocity for any subsequent animation\n   * while deferring the commit until the next animation frame.\n   */\n  commitStyles() {\n    if (!this.isPseudoElement) {\n      this.animation.commitStyles?.();\n    }\n  }\n  get duration() {\n    const duration = this.animation.effect?.getComputedTiming().duration || 0;\n    return motionUtils.millisecondsToSeconds(Number(duration));\n  }\n  get time() {\n    return motionUtils.millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n  }\n  set time(newTime) {\n    this.animation.currentTime = motionUtils.secondsToMilliseconds(newTime);\n  }\n  /**\n   * The playback speed of the animation.\n   * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n   */\n  get speed() {\n    return this.animation.playbackRate;\n  }\n  set speed(newSpeed) {\n    this.animation.playbackRate = newSpeed;\n  }\n  get state() {\n    return this.animation.playState;\n  }\n  get startTime() {\n    return Number(this.animation.startTime);\n  }\n  get finished() {\n    return this.animation.finished;\n  }\n  flatten() {\n    if (this.allowFlatten) {\n      this.animation.effect?.updateTiming({\n        easing: \"linear\"\n      });\n    }\n  }\n  /**\n   * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n   */\n  attachTimeline(timeline) {\n    this.animation.timeline = timeline;\n    this.animation.onfinish = null;\n    return motionUtils.noop;\n  }\n  /**\n   * Allows the animation to be awaited.\n   *\n   * @deprecated Use `finished` instead.\n   */\n  then(onResolve, onReject) {\n    return this.finished.then(onResolve).catch(onReject);\n  }\n}\nfunction getValueTransition(transition, key) {\n  return transition?.[key] ?? transition?.[\"default\"] ?? transition;\n}\n\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n  let duration = 0;\n  const timeStep = 50;\n  let state = generator.next(duration);\n  while (!state.done && duration < maxGeneratorDuration) {\n    duration += timeStep;\n    state = generator.next(duration);\n  }\n  return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options) {\n  let scale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n  let createGenerator = arguments.length > 2 ? arguments[2] : undefined;\n  const generator = createGenerator({\n    ...options,\n    keyframes: [0, scale]\n  });\n  const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n  return {\n    type: \"keyframes\",\n    ease: progress => {\n      return generator.next(duration * progress).value / scale;\n    },\n    duration: motionUtils.millisecondsToSeconds(duration)\n  };\n}\nfunction isWaapiSupportedEasing(easing) {\n  return Boolean(typeof easing === \"function\" && supportsLinearEasing() || !easing || typeof easing === \"string\" && (easing in supportedWaapiEasing || supportsLinearEasing()) || isBezierDefinition(easing) || Array.isArray(easing) && easing.every(isWaapiSupportedEasing));\n}\nfunction attachTimeline(animation, timeline) {\n  animation.timeline = timeline;\n  animation.onfinish = null;\n}\nconst stepsOrder = [\"read\",\n// Read\n\"resolveKeyframes\",\n// Write/Read/Write/Read\n\"update\",\n// Compute\n\"preRender\",\n// Compute\n\"render\",\n// Write\n\"postRender\" // Compute\n];\nfunction createRenderStep(runNextFrame, stepName) {\n  /**\n   * We create and reuse two queues, one to queue jobs for the current frame\n   * and one for the next. We reuse to avoid triggering GC after x frames.\n   */\n  let thisFrame = new Set();\n  let nextFrame = new Set();\n  /**\n   * Track whether we're currently processing jobs in this step. This way\n   * we can decide whether to schedule new jobs for this frame or next.\n   */\n  let isProcessing = false;\n  let flushNextFrame = false;\n  /**\n   * A set of processes which were marked keepAlive when scheduled.\n   */\n  const toKeepAlive = new WeakSet();\n  let latestFrameData = {\n    delta: 0.0,\n    timestamp: 0.0,\n    isProcessing: false\n  };\n  let numCalls = 0;\n  function triggerCallback(callback) {\n    if (toKeepAlive.has(callback)) {\n      step.schedule(callback);\n      runNextFrame();\n    }\n    numCalls++;\n    callback(latestFrameData);\n  }\n  const step = {\n    /**\n     * Schedule a process to run on the next frame.\n     */\n    schedule: function (callback) {\n      let keepAlive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      let immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      const addToCurrentFrame = immediate && isProcessing;\n      const queue = addToCurrentFrame ? thisFrame : nextFrame;\n      if (keepAlive) toKeepAlive.add(callback);\n      if (!queue.has(callback)) queue.add(callback);\n      return callback;\n    },\n    /**\n     * Cancel the provided callback from running on the next frame.\n     */\n    cancel: callback => {\n      nextFrame.delete(callback);\n      toKeepAlive.delete(callback);\n    },\n    /**\n     * Execute all schedule callbacks.\n     */\n    process: frameData => {\n      latestFrameData = frameData;\n      /**\n       * If we're already processing we've probably been triggered by a flushSync\n       * inside an existing process. Instead of executing, mark flushNextFrame\n       * as true and ensure we flush the following frame at the end of this one.\n       */\n      if (isProcessing) {\n        flushNextFrame = true;\n        return;\n      }\n      isProcessing = true;\n      [thisFrame, nextFrame] = [nextFrame, thisFrame];\n      // Execute this frame\n      thisFrame.forEach(triggerCallback);\n      /**\n       * If we're recording stats then\n       */\n      if (stepName && statsBuffer.value) {\n        statsBuffer.value.frameloop[stepName].push(numCalls);\n      }\n      numCalls = 0;\n      // Clear the frame so no callbacks remain. This is to avoid\n      // memory leaks should this render step not run for a while.\n      thisFrame.clear();\n      isProcessing = false;\n      if (flushNextFrame) {\n        flushNextFrame = false;\n        step.process(frameData);\n      }\n    }\n  };\n  return step;\n}\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n  let runNextFrame = false;\n  let useDefaultElapsed = true;\n  const state = {\n    delta: 0.0,\n    timestamp: 0.0,\n    isProcessing: false\n  };\n  const flagRunNextFrame = () => runNextFrame = true;\n  const steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n    return acc;\n  }, {});\n  const {\n    read,\n    resolveKeyframes,\n    update,\n    preRender,\n    render,\n    postRender\n  } = steps;\n  const processBatch = () => {\n    const timestamp = motionUtils.MotionGlobalConfig.useManualTiming ? state.timestamp : performance.now();\n    runNextFrame = false;\n    if (!motionUtils.MotionGlobalConfig.useManualTiming) {\n      state.delta = useDefaultElapsed ? 1000 / 60 : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n    }\n    state.timestamp = timestamp;\n    state.isProcessing = true;\n    // Unrolled render loop for better per-frame performance\n    read.process(state);\n    resolveKeyframes.process(state);\n    update.process(state);\n    preRender.process(state);\n    render.process(state);\n    postRender.process(state);\n    state.isProcessing = false;\n    if (runNextFrame && allowKeepAlive) {\n      useDefaultElapsed = false;\n      scheduleNextBatch(processBatch);\n    }\n  };\n  const wake = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!state.isProcessing) {\n      scheduleNextBatch(processBatch);\n    }\n  };\n  const schedule = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = function (process) {\n      let keepAlive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      let immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (!runNextFrame) wake();\n      return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n  }, {});\n  const cancel = process => {\n    for (let i = 0; i < stepsOrder.length; i++) {\n      steps[stepsOrder[i]].cancel(process);\n    }\n  };\n  return {\n    schedule,\n    cancel,\n    state,\n    steps\n  };\n}\nconst {\n  schedule: frame,\n  cancel: cancelFrame,\n  state: frameData,\n  steps: frameSteps\n} = /* @__PURE__ */createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : motionUtils.noop, true);\nconst {\n  schedule: microtask,\n  cancel: cancelMicrotask\n} = /* @__PURE__ */createRenderBatcher(queueMicrotask, false);\nlet now;\nfunction clearTime() {\n  now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n  now: () => {\n    if (now === undefined) {\n      time.set(frameData.isProcessing || motionUtils.MotionGlobalConfig.useManualTiming ? frameData.timestamp : performance.now());\n    }\n    return now;\n  },\n  set: newTime => {\n    now = newTime;\n    queueMicrotask(clearTime);\n  }\n};\nconst isDragging = {\n  x: false,\n  y: false\n};\nfunction isDragActive() {\n  return isDragging.x || isDragging.y;\n}\nfunction setDragLock(axis) {\n  if (axis === \"x\" || axis === \"y\") {\n    if (isDragging[axis]) {\n      return null;\n    } else {\n      isDragging[axis] = true;\n      return () => {\n        isDragging[axis] = false;\n      };\n    }\n  } else {\n    if (isDragging.x || isDragging.y) {\n      return null;\n    } else {\n      isDragging.x = isDragging.y = true;\n      return () => {\n        isDragging.x = isDragging.y = false;\n      };\n    }\n  }\n}\nfunction resolveElements(elementOrSelector, scope, selectorCache) {\n  if (elementOrSelector instanceof EventTarget) {\n    return [elementOrSelector];\n  } else if (typeof elementOrSelector === \"string\") {\n    let root = document;\n    if (scope) {\n      root = scope.current;\n    }\n    const elements = selectorCache?.[elementOrSelector] ?? root.querySelectorAll(elementOrSelector);\n    return elements ? Array.from(elements) : [];\n  }\n  return Array.from(elementOrSelector);\n}\nfunction setupGesture(elementOrSelector, options) {\n  const elements = resolveElements(elementOrSelector);\n  const gestureAbortController = new AbortController();\n  const eventOptions = {\n    passive: true,\n    ...options,\n    signal: gestureAbortController.signal\n  };\n  const cancel = () => gestureAbortController.abort();\n  return [elements, eventOptions, cancel];\n}\nfunction isValidHover(event) {\n  return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n  const onPointerEnter = enterEvent => {\n    if (!isValidHover(enterEvent)) return;\n    const {\n      target\n    } = enterEvent;\n    const onHoverEnd = onHoverStart(target, enterEvent);\n    if (typeof onHoverEnd !== \"function\" || !target) return;\n    const onPointerLeave = leaveEvent => {\n      if (!isValidHover(leaveEvent)) return;\n      onHoverEnd(leaveEvent);\n      target.removeEventListener(\"pointerleave\", onPointerLeave);\n    };\n    target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n  };\n  elements.forEach(element => {\n    element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n  });\n  return cancel;\n}\n\n/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n  if (!child) {\n    return false;\n  } else if (parent === child) {\n    return true;\n  } else {\n    return isNodeOrChild(parent, child.parentElement);\n  }\n};\nconst isPrimaryPointer = event => {\n  if (event.pointerType === \"mouse\") {\n    return typeof event.button !== \"number\" || event.button <= 0;\n  } else {\n    /**\n     * isPrimary is true for all mice buttons, whereas every touch point\n     * is regarded as its own input. So subsequent concurrent touch points\n     * will be false.\n     *\n     * Specifically match against false here as incomplete versions of\n     * PointerEvents in very old browser might have it set as undefined.\n     */\n    return event.isPrimary !== false;\n  }\n};\nconst focusableElements = new Set([\"BUTTON\", \"INPUT\", \"SELECT\", \"TEXTAREA\", \"A\"]);\nfunction isElementKeyboardAccessible(element) {\n  return focusableElements.has(element.tagName) || element.tabIndex !== -1;\n}\nconst isPressing = new WeakSet();\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n  return event => {\n    if (event.key !== \"Enter\") return;\n    callback(event);\n  };\n}\nfunction firePointerEvent(target, type) {\n  target.dispatchEvent(new PointerEvent(\"pointer\" + type, {\n    isPrimary: true,\n    bubbles: true\n  }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n  const element = focusEvent.currentTarget;\n  if (!element) return;\n  const handleKeydown = filterEvents(() => {\n    if (isPressing.has(element)) return;\n    firePointerEvent(element, \"down\");\n    const handleKeyup = filterEvents(() => {\n      firePointerEvent(element, \"up\");\n    });\n    const handleBlur = () => firePointerEvent(element, \"cancel\");\n    element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n    element.addEventListener(\"blur\", handleBlur, eventOptions);\n  });\n  element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n  /**\n   * Add an event listener that fires on blur to remove the keydown events.\n   */\n  element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n  return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n  const startPress = startEvent => {\n    const target = startEvent.currentTarget;\n    if (!isValidPressEvent(startEvent) || isPressing.has(target)) return;\n    isPressing.add(target);\n    const onPressEnd = onPressStart(target, startEvent);\n    const onPointerEnd = (endEvent, success) => {\n      window.removeEventListener(\"pointerup\", onPointerUp);\n      window.removeEventListener(\"pointercancel\", onPointerCancel);\n      if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n        return;\n      }\n      isPressing.delete(target);\n      if (typeof onPressEnd === \"function\") {\n        onPressEnd(endEvent, {\n          success\n        });\n      }\n    };\n    const onPointerUp = upEvent => {\n      onPointerEnd(upEvent, target === window || target === document || options.useGlobalTarget || isNodeOrChild(target, upEvent.target));\n    };\n    const onPointerCancel = cancelEvent => {\n      onPointerEnd(cancelEvent, false);\n    };\n    window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n    window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n  };\n  targets.forEach(target => {\n    const pointerDownTarget = options.useGlobalTarget ? window : target;\n    pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n    if (target instanceof HTMLElement) {\n      target.addEventListener(\"focus\", event => enableKeyboardPress(event, eventOptions));\n      if (!isElementKeyboardAccessible(target) && !target.hasAttribute(\"tabindex\")) {\n        target.tabIndex = 0;\n      }\n    }\n  });\n  return cancelEvents;\n}\nfunction record() {\n  const {\n    value\n  } = statsBuffer;\n  if (value === null) {\n    cancelFrame(record);\n    return;\n  }\n  value.frameloop.rate.push(frameData.delta);\n  value.animations.mainThread.push(activeAnimations.mainThread);\n  value.animations.waapi.push(activeAnimations.waapi);\n  value.animations.layout.push(activeAnimations.layout);\n}\nfunction mean(values) {\n  return values.reduce((acc, value) => acc + value, 0) / values.length;\n}\nfunction summarise(values) {\n  let calcAverage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : mean;\n  if (values.length === 0) {\n    return {\n      min: 0,\n      max: 0,\n      avg: 0\n    };\n  }\n  return {\n    min: Math.min(...values),\n    max: Math.max(...values),\n    avg: calcAverage(values)\n  };\n}\nconst msToFps = ms => Math.round(1000 / ms);\nfunction clearStatsBuffer() {\n  statsBuffer.value = null;\n  statsBuffer.addProjectionMetrics = null;\n}\nfunction reportStats() {\n  const {\n    value\n  } = statsBuffer;\n  if (!value) {\n    throw new Error(\"Stats are not being measured\");\n  }\n  clearStatsBuffer();\n  cancelFrame(record);\n  const summary = {\n    frameloop: {\n      rate: summarise(value.frameloop.rate),\n      read: summarise(value.frameloop.read),\n      resolveKeyframes: summarise(value.frameloop.resolveKeyframes),\n      update: summarise(value.frameloop.update),\n      preRender: summarise(value.frameloop.preRender),\n      render: summarise(value.frameloop.render),\n      postRender: summarise(value.frameloop.postRender)\n    },\n    animations: {\n      mainThread: summarise(value.animations.mainThread),\n      waapi: summarise(value.animations.waapi),\n      layout: summarise(value.animations.layout)\n    },\n    layoutProjection: {\n      nodes: summarise(value.layoutProjection.nodes),\n      calculatedTargetDeltas: summarise(value.layoutProjection.calculatedTargetDeltas),\n      calculatedProjections: summarise(value.layoutProjection.calculatedProjections)\n    }\n  };\n  /**\n   * Convert the rate to FPS\n   */\n  const {\n    rate\n  } = summary.frameloop;\n  rate.min = msToFps(rate.min);\n  rate.max = msToFps(rate.max);\n  rate.avg = msToFps(rate.avg);\n  [rate.min, rate.max] = [rate.max, rate.min];\n  return summary;\n}\nfunction recordStats() {\n  if (statsBuffer.value) {\n    clearStatsBuffer();\n    throw new Error(\"Stats are already being measured\");\n  }\n  const newStatsBuffer = statsBuffer;\n  newStatsBuffer.value = {\n    frameloop: {\n      rate: [],\n      read: [],\n      resolveKeyframes: [],\n      update: [],\n      preRender: [],\n      render: [],\n      postRender: []\n    },\n    animations: {\n      mainThread: [],\n      waapi: [],\n      layout: []\n    },\n    layoutProjection: {\n      nodes: [],\n      calculatedTargetDeltas: [],\n      calculatedProjections: []\n    }\n  };\n  newStatsBuffer.addProjectionMetrics = metrics => {\n    const {\n      layoutProjection\n    } = newStatsBuffer.value;\n    layoutProjection.nodes.push(metrics.nodes);\n    layoutProjection.calculatedTargetDeltas.push(metrics.calculatedTargetDeltas);\n    layoutProjection.calculatedProjections.push(metrics.calculatedProjections);\n  };\n  frame.postRender(record, true);\n  return reportStats;\n}\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = value => {\n  return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n  current: undefined\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n  /**\n   * @param init - The initiating value\n   * @param config - Optional configuration options\n   *\n   * -  `transformer`: A function to transform incoming values with.\n   */\n  constructor(init) {\n    var _this = this;\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    /**\n     * This will be replaced by the build step with the latest version number.\n     * When MotionValues are provided to motion components, warn if versions are mixed.\n     */\n    this.version = \"12.7.3\";\n    /**\n     * Tracks whether this value can output a velocity. Currently this is only true\n     * if the value is numerical, but we might be able to widen the scope here and support\n     * other value types.\n     *\n     * @internal\n     */\n    this.canTrackVelocity = null;\n    /**\n     * An object containing a SubscriptionManager for each active event.\n     */\n    this.events = {};\n    this.updateAndNotify = function (v) {\n      let render = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      const currentTime = time.now();\n      /**\n       * If we're updating the value during another frame or eventloop\n       * than the previous frame, then the we set the previous frame value\n       * to current.\n       */\n      if (_this.updatedAt !== currentTime) {\n        _this.setPrevFrameValue();\n      }\n      _this.prev = _this.current;\n      _this.setCurrent(v);\n      // Update update subscribers\n      if (_this.current !== _this.prev && _this.events.change) {\n        _this.events.change.notify(_this.current);\n      }\n      // Update render subscribers\n      if (render && _this.events.renderRequest) {\n        _this.events.renderRequest.notify(_this.current);\n      }\n    };\n    this.hasAnimated = false;\n    this.setCurrent(init);\n    this.owner = options.owner;\n  }\n  setCurrent(current) {\n    this.current = current;\n    this.updatedAt = time.now();\n    if (this.canTrackVelocity === null && current !== undefined) {\n      this.canTrackVelocity = isFloat(this.current);\n    }\n  }\n  setPrevFrameValue() {\n    let prevFrameValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.current;\n    this.prevFrameValue = prevFrameValue;\n    this.prevUpdatedAt = this.updatedAt;\n  }\n  /**\n   * Adds a function that will be notified when the `MotionValue` is updated.\n   *\n   * It returns a function that, when called, will cancel the subscription.\n   *\n   * When calling `onChange` inside a React component, it should be wrapped with the\n   * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n   * from the `useEffect` function to ensure you don't add duplicate subscribers..\n   *\n   * ```jsx\n   * export const MyComponent = () => {\n   *   const x = useMotionValue(0)\n   *   const y = useMotionValue(0)\n   *   const opacity = useMotionValue(1)\n   *\n   *   useEffect(() => {\n   *     function updateOpacity() {\n   *       const maxXY = Math.max(x.get(), y.get())\n   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n   *       opacity.set(newOpacity)\n   *     }\n   *\n   *     const unsubscribeX = x.on(\"change\", updateOpacity)\n   *     const unsubscribeY = y.on(\"change\", updateOpacity)\n   *\n   *     return () => {\n   *       unsubscribeX()\n   *       unsubscribeY()\n   *     }\n   *   }, [])\n   *\n   *   return <motion.div style={{ x }} />\n   * }\n   * ```\n   *\n   * @param subscriber - A function that receives the latest value.\n   * @returns A function that, when called, will cancel this subscription.\n   *\n   * @deprecated\n   */\n  onChange(subscription) {\n    if (process.env.NODE_ENV !== \"production\") {\n      motionUtils.warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n    }\n    return this.on(\"change\", subscription);\n  }\n  on(eventName, callback) {\n    if (!this.events[eventName]) {\n      this.events[eventName] = new motionUtils.SubscriptionManager();\n    }\n    const unsubscribe = this.events[eventName].add(callback);\n    if (eventName === \"change\") {\n      return () => {\n        unsubscribe();\n        /**\n         * If we have no more change listeners by the start\n         * of the next frame, stop active animations.\n         */\n        frame.read(() => {\n          if (!this.events.change.getSize()) {\n            this.stop();\n          }\n        });\n      };\n    }\n    return unsubscribe;\n  }\n  clearListeners() {\n    for (const eventManagers in this.events) {\n      this.events[eventManagers].clear();\n    }\n  }\n  /**\n   * Attaches a passive effect to the `MotionValue`.\n   */\n  attach(passiveEffect, stopPassiveEffect) {\n    this.passiveEffect = passiveEffect;\n    this.stopPassiveEffect = stopPassiveEffect;\n  }\n  /**\n   * Sets the state of the `MotionValue`.\n   *\n   * @remarks\n   *\n   * ```jsx\n   * const x = useMotionValue(0)\n   * x.set(10)\n   * ```\n   *\n   * @param latest - Latest value to set.\n   * @param render - Whether to notify render subscribers. Defaults to `true`\n   *\n   * @public\n   */\n  set(v) {\n    let render = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (!render || !this.passiveEffect) {\n      this.updateAndNotify(v, render);\n    } else {\n      this.passiveEffect(v, this.updateAndNotify);\n    }\n  }\n  setWithVelocity(prev, current, delta) {\n    this.set(current);\n    this.prev = undefined;\n    this.prevFrameValue = prev;\n    this.prevUpdatedAt = this.updatedAt - delta;\n  }\n  /**\n   * Set the state of the `MotionValue`, stopping any active animations,\n   * effects, and resets velocity to `0`.\n   */\n  jump(v) {\n    let endAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.updateAndNotify(v);\n    this.prev = v;\n    this.prevUpdatedAt = this.prevFrameValue = undefined;\n    endAnimation && this.stop();\n    if (this.stopPassiveEffect) this.stopPassiveEffect();\n  }\n  /**\n   * Returns the latest state of `MotionValue`\n   *\n   * @returns - The latest state of `MotionValue`\n   *\n   * @public\n   */\n  get() {\n    if (collectMotionValues.current) {\n      collectMotionValues.current.push(this);\n    }\n    return this.current;\n  }\n  /**\n   * @public\n   */\n  getPrevious() {\n    return this.prev;\n  }\n  /**\n   * Returns the latest velocity of `MotionValue`\n   *\n   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n   *\n   * @public\n   */\n  getVelocity() {\n    const currentTime = time.now();\n    if (!this.canTrackVelocity || this.prevFrameValue === undefined || currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n      return 0;\n    }\n    const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n    // Casts because of parseFloat's poor typing\n    return motionUtils.velocityPerSecond(parseFloat(this.current) - parseFloat(this.prevFrameValue), delta);\n  }\n  /**\n   * Registers a new animation to control this `MotionValue`. Only one\n   * animation can drive a `MotionValue` at one time.\n   *\n   * ```jsx\n   * value.start()\n   * ```\n   *\n   * @param animation - A function that starts the provided animation\n   */\n  start(startAnimation) {\n    this.stop();\n    return new Promise(resolve => {\n      this.hasAnimated = true;\n      this.animation = startAnimation(resolve);\n      if (this.events.animationStart) {\n        this.events.animationStart.notify();\n      }\n    }).then(() => {\n      if (this.events.animationComplete) {\n        this.events.animationComplete.notify();\n      }\n      this.clearAnimation();\n    });\n  }\n  /**\n   * Stop the currently active animation.\n   *\n   * @public\n   */\n  stop() {\n    if (this.animation) {\n      this.animation.stop();\n      if (this.events.animationCancel) {\n        this.events.animationCancel.notify();\n      }\n    }\n    this.clearAnimation();\n  }\n  /**\n   * Returns `true` if this value is currently animating.\n   *\n   * @public\n   */\n  isAnimating() {\n    return !!this.animation;\n  }\n  clearAnimation() {\n    delete this.animation;\n  }\n  /**\n   * Destroy and clean up subscribers to this `MotionValue`.\n   *\n   * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n   * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n   * created a `MotionValue` via the `motionValue` function.\n   *\n   * @public\n   */\n  destroy() {\n    this.clearListeners();\n    this.stop();\n    if (this.stopPassiveEffect) {\n      this.stopPassiveEffect();\n    }\n  }\n}\nfunction motionValue(init, options) {\n  return new MotionValue(init, options);\n}\nfunction chooseLayerType(valueName) {\n  if (valueName === \"layout\") return \"group\";\n  if (valueName === \"enter\" || valueName === \"new\") return \"new\";\n  if (valueName === \"exit\" || valueName === \"old\") return \"old\";\n  return \"group\";\n}\nlet pendingRules = {};\nlet style = null;\nconst css = {\n  set: (selector, values) => {\n    pendingRules[selector] = values;\n  },\n  commit: () => {\n    if (!style) {\n      style = document.createElement(\"style\");\n      style.id = \"motion-view\";\n    }\n    let cssText = \"\";\n    for (const selector in pendingRules) {\n      const rule = pendingRules[selector];\n      cssText += `${selector} {\\n`;\n      for (const [property, value] of Object.entries(rule)) {\n        cssText += `  ${property}: ${value};\\n`;\n      }\n      cssText += \"}\\n\";\n    }\n    style.textContent = cssText;\n    document.head.appendChild(style);\n    pendingRules = {};\n  },\n  remove: () => {\n    if (style && style.parentElement) {\n      style.parentElement.removeChild(style);\n    }\n  }\n};\nfunction getLayerName(pseudoElement) {\n  const match = pseudoElement.match(/::view-transition-(old|new|group|image-pair)\\((.*?)\\)/);\n  if (!match) return null;\n  return {\n    layer: match[2],\n    type: match[1]\n  };\n}\nfunction filterViewAnimations(animation) {\n  const {\n    effect\n  } = animation;\n  if (!effect) return false;\n  return effect.target === document.documentElement && effect.pseudoElement?.startsWith(\"::view-transition\");\n}\nfunction getViewAnimations() {\n  return document.getAnimations().filter(filterViewAnimations);\n}\nfunction hasTarget(target, targets) {\n  return targets.has(target) && Object.keys(targets.get(target)).length > 0;\n}\nconst definitionNames = [\"layout\", \"enter\", \"exit\", \"new\", \"old\"];\nfunction startViewAnimation(builder) {\n  const {\n    update,\n    targets,\n    options: defaultOptions\n  } = builder;\n  if (!document.startViewTransition) {\n    return new Promise(async resolve => {\n      await update();\n      resolve(new GroupAnimation([]));\n    });\n  }\n  // TODO: Go over existing targets and ensure they all have ids\n  /**\n   * If we don't have any animations defined for the root target,\n   * remove it from being captured.\n   */\n  if (!hasTarget(\"root\", targets)) {\n    css.set(\":root\", {\n      \"view-transition-name\": \"none\"\n    });\n  }\n  /**\n   * Set the timing curve to linear for all view transition layers.\n   * This gets baked into the keyframes, which can't be changed\n   * without breaking the generated animation.\n   *\n   * This allows us to set easing via updateTiming - which can be changed.\n   */\n  css.set(\"::view-transition-group(*), ::view-transition-old(*), ::view-transition-new(*)\", {\n    \"animation-timing-function\": \"linear !important\"\n  });\n  css.commit(); // Write\n  const transition = document.startViewTransition(async () => {\n    await update();\n    // TODO: Go over new targets and ensure they all have ids\n  });\n  transition.finished.finally(() => {\n    css.remove(); // Write\n  });\n  return new Promise(resolve => {\n    transition.ready.then(() => {\n      const generatedViewAnimations = getViewAnimations();\n      const animations = [];\n      /**\n       * Create animations for each of our explicitly-defined subjects.\n       */\n      targets.forEach((definition, target) => {\n        // TODO: If target is not \"root\", resolve elements\n        // and iterate over each\n        for (const key of definitionNames) {\n          if (!definition[key]) continue;\n          const {\n            keyframes,\n            options\n          } = definition[key];\n          for (let [valueName, valueKeyframes] of Object.entries(keyframes)) {\n            if (!valueKeyframes) continue;\n            const valueOptions = {\n              ...getValueTransition(defaultOptions, valueName),\n              ...getValueTransition(options, valueName)\n            };\n            const type = chooseLayerType(key);\n            /**\n             * If this is an opacity animation, and keyframes are not an array,\n             * we need to convert them into an array and set an initial value.\n             */\n            if (valueName === \"opacity\" && !Array.isArray(valueKeyframes)) {\n              const initialValue = type === \"new\" ? 0 : 1;\n              valueKeyframes = [initialValue, valueKeyframes];\n            }\n            /**\n             * Resolve stagger function if provided.\n             */\n            if (typeof valueOptions.delay === \"function\") {\n              valueOptions.delay = valueOptions.delay(0, 1);\n            }\n            valueOptions.duration && (valueOptions.duration = motionUtils.secondsToMilliseconds(valueOptions.duration));\n            valueOptions.delay && (valueOptions.delay = motionUtils.secondsToMilliseconds(valueOptions.delay));\n            const animation = new NativeAnimation({\n              element: document.documentElement,\n              name: valueName,\n              pseudoElement: `::view-transition-${type}(${target})`,\n              keyframes: valueKeyframes,\n              transition: valueOptions\n            });\n            animations.push(animation);\n          }\n        }\n      });\n      /**\n       * Handle browser generated animations\n       */\n      for (const animation of generatedViewAnimations) {\n        if (animation.playState === \"finished\") continue;\n        const {\n          effect\n        } = animation;\n        if (!effect || !(effect instanceof KeyframeEffect)) continue;\n        const {\n          pseudoElement\n        } = effect;\n        if (!pseudoElement) continue;\n        const name = getLayerName(pseudoElement);\n        if (!name) continue;\n        const targetDefinition = targets.get(name.layer);\n        if (!targetDefinition) {\n          /**\n           * If transition name is group then update the timing of the animation\n           * whereas if it's old or new then we could possibly replace it using\n           * the above method.\n           */\n          const transitionName = name.type === \"group\" ? \"layout\" : \"\";\n          let animationTransition = {\n            ...getValueTransition(defaultOptions, transitionName)\n          };\n          animationTransition.duration && (animationTransition.duration = motionUtils.secondsToMilliseconds(animationTransition.duration));\n          animationTransition = applyGeneratorOptions(animationTransition);\n          const easing = mapEasingToNativeEasing(animationTransition.ease, animationTransition.duration);\n          effect.updateTiming({\n            delay: motionUtils.secondsToMilliseconds(animationTransition.delay ?? 0),\n            duration: animationTransition.duration,\n            easing\n          });\n          animations.push(new NativeAnimation({\n            animation\n          }));\n        } else if (hasOpacity(targetDefinition, \"enter\") && hasOpacity(targetDefinition, \"exit\") && effect.getKeyframes().some(keyframe => keyframe.mixBlendMode)) {\n          animations.push(new NativeAnimation({\n            animation\n          }));\n        } else {\n          animation.cancel();\n        }\n      }\n      resolve(new GroupAnimation(animations));\n    });\n  });\n}\nfunction hasOpacity(target, key) {\n  return target?.[key]?.keyframes.opacity;\n}\nlet builders = [];\nlet current = null;\nfunction next() {\n  current = null;\n  const [nextBuilder] = builders;\n  if (nextBuilder) start(nextBuilder);\n}\nfunction start(builder) {\n  motionUtils.removeItem(builders, builder);\n  current = builder;\n  startViewAnimation(builder).then(animation => {\n    builder.notifyReady(animation);\n    animation.finished.finally(next);\n  });\n}\nfunction processQueue() {\n  /**\n   * Iterate backwards over the builders array. We can ignore the\n   * \"wait\" animations. If we have an interrupting animation in the\n   * queue then we need to batch all preceeding animations into it.\n   * Currently this only batches the update functions but will also\n   * need to batch the targets.\n   */\n  for (let i = builders.length - 1; i >= 0; i--) {\n    const builder = builders[i];\n    const {\n      interrupt\n    } = builder.options;\n    if (interrupt === \"immediate\") {\n      const batchedUpdates = builders.slice(0, i + 1).map(b => b.update);\n      const remaining = builders.slice(i + 1);\n      builder.update = () => {\n        batchedUpdates.forEach(update => update());\n      };\n      // Put the current builder at the front, followed by any \"wait\" builders\n      builders = [builder, ...remaining];\n      break;\n    }\n  }\n  if (!current || builders[0]?.options.interrupt === \"immediate\") {\n    next();\n  }\n}\nfunction addToQueue(builder) {\n  builders.push(builder);\n  microtask.render(processQueue);\n}\nclass ViewTransitionBuilder {\n  constructor(update) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.currentTarget = \"root\";\n    this.targets = new Map();\n    this.notifyReady = motionUtils.noop;\n    this.readyPromise = new Promise(resolve => {\n      this.notifyReady = resolve;\n    });\n    this.update = update;\n    this.options = {\n      interrupt: \"wait\",\n      ...options\n    };\n    addToQueue(this);\n  }\n  get(selector) {\n    this.currentTarget = selector;\n    return this;\n  }\n  layout(keyframes, options) {\n    this.updateTarget(\"layout\", keyframes, options);\n    return this;\n  }\n  new(keyframes, options) {\n    this.updateTarget(\"new\", keyframes, options);\n    return this;\n  }\n  old(keyframes, options) {\n    this.updateTarget(\"old\", keyframes, options);\n    return this;\n  }\n  enter(keyframes, options) {\n    this.updateTarget(\"enter\", keyframes, options);\n    return this;\n  }\n  exit(keyframes, options) {\n    this.updateTarget(\"exit\", keyframes, options);\n    return this;\n  }\n  crossfade(options) {\n    this.updateTarget(\"enter\", {\n      opacity: 1\n    }, options);\n    this.updateTarget(\"exit\", {\n      opacity: 0\n    }, options);\n    return this;\n  }\n  updateTarget(target, keyframes) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const {\n      currentTarget,\n      targets\n    } = this;\n    if (!targets.has(currentTarget)) {\n      targets.set(currentTarget, {});\n    }\n    const targetData = targets.get(currentTarget);\n    targetData[target] = {\n      keyframes,\n      options\n    };\n  }\n  then(resolve, reject) {\n    return this.readyPromise.then(resolve, reject);\n  }\n}\nfunction animateView(update) {\n  let defaultOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new ViewTransitionBuilder(update, defaultOptions);\n}\n\n/**\n * @deprecated\n *\n * Import as `frame` instead.\n */\nconst sync = frame;\n/**\n * @deprecated\n *\n * Use cancelFrame(callback) instead.\n */\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n  acc[key] = process => cancelFrame(process);\n  return acc;\n}, {});\nexports.GroupAnimation = GroupAnimation;\nexports.GroupAnimationWithThen = GroupAnimationWithThen;\nexports.MotionValue = MotionValue;\nexports.NativeAnimation = NativeAnimation;\nexports.ViewTransitionBuilder = ViewTransitionBuilder;\nexports.activeAnimations = activeAnimations;\nexports.animateView = animateView;\nexports.attachTimeline = attachTimeline;\nexports.calcGeneratorDuration = calcGeneratorDuration;\nexports.cancelFrame = cancelFrame;\nexports.cancelMicrotask = cancelMicrotask;\nexports.cancelSync = cancelSync;\nexports.collectMotionValues = collectMotionValues;\nexports.createGeneratorEasing = createGeneratorEasing;\nexports.createRenderBatcher = createRenderBatcher;\nexports.cubicBezierAsString = cubicBezierAsString;\nexports.frame = frame;\nexports.frameData = frameData;\nexports.frameSteps = frameSteps;\nexports.generateLinearEasing = generateLinearEasing;\nexports.getValueTransition = getValueTransition;\nexports.hover = hover;\nexports.isBezierDefinition = isBezierDefinition;\nexports.isDragActive = isDragActive;\nexports.isDragging = isDragging;\nexports.isGenerator = isGenerator;\nexports.isNodeOrChild = isNodeOrChild;\nexports.isPrimaryPointer = isPrimaryPointer;\nexports.isWaapiSupportedEasing = isWaapiSupportedEasing;\nexports.mapEasingToNativeEasing = mapEasingToNativeEasing;\nexports.maxGeneratorDuration = maxGeneratorDuration;\nexports.microtask = microtask;\nexports.motionValue = motionValue;\nexports.press = press;\nexports.recordStats = recordStats;\nexports.resolveElements = resolveElements;\nexports.setDragLock = setDragLock;\nexports.startWaapiAnimation = startWaapiAnimation;\nexports.statsBuffer = statsBuffer;\nexports.supportedWaapiEasing = supportedWaapiEasing;\nexports.supportsFlags = supportsFlags;\nexports.supportsLinearEasing = supportsLinearEasing;\nexports.supportsScrollTimeline = supportsScrollTimeline;\nexports.sync = sync;\nexports.time = time;","map":{"version":3,"names":["Object","defineProperty","exports","value","motionUtils","require","supportsScrollTimeline","memo","window","ScrollTimeline","undefined","GroupAnimation","constructor","animations","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","i","length","attachTimeline","timeline","fallback","subscriptions","forEach","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupAnimationWithThen","then","onResolve","_onReject","finally","isCSSVar","name","startsWith","style$1","set","element","style","setProperty","get","getPropertyValue","isNotNull","getFinalKeyframe","keyframes","_ref","finalKeyframe","repeat","repeatType","resolvedKeyframes","index","supportsPartialKeyframes","document","createElement","animate","opacity","e","pxValues","Set","hydrateKeyframes","pseudoElement","Array","isArray","has","unshift","activeAnimations","layout","mainThread","waapi","statsBuffer","addProjectionMetrics","isBezierDefinition","easing","supportsFlags","memoSupports","callback","supportsFlag","memoized","supportsLinearEasing","generateLinearEasing","resolution","arguments","points","numPoints","round","substring","cubicBezierAsString","_ref2","a","b","c","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","delay","times","keyframeOptions","offset","fill","iterations","direction","isGenerator","type","applyGeneratorOptions","_ref3","options","applyToOptions","animationMaps","WeakMap","animationMapKey","getAnimationMap","Map","NativeAnimation","unresolvedKeyframes","allowFlatten","transition","isPseudoElement","animationMap","key","currentAnimation","invariant","autoplay","removeAnimation","delete","onfinish","finish","state","commitStyles","effect","getComputedTiming","millisecondsToSeconds","Number","currentTime","newTime","secondsToMilliseconds","playbackRate","newSpeed","playState","updateTiming","noop","onReject","catch","getValueTransition","maxGeneratorDuration","calcGeneratorDuration","generator","timeStep","next","done","Infinity","createGeneratorEasing","scale","createGenerator","min","progress","isWaapiSupportedEasing","every","stepsOrder","createRenderStep","runNextFrame","stepName","thisFrame","nextFrame","isProcessing","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","delta","timestamp","numCalls","triggerCallback","step","schedule","keepAlive","immediate","addToCurrentFrame","queue","add","process","frameData","frameloop","push","clear","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","useDefaultElapsed","flagRunNextFrame","steps","reduce","acc","read","resolveKeyframes","update","preRender","render","postRender","processBatch","MotionGlobalConfig","useManualTiming","performance","now","wake","frame","cancelFrame","frameSteps","requestAnimationFrame","microtask","cancelMicrotask","queueMicrotask","clearTime","isDragging","x","y","isDragActive","setDragLock","axis","resolveElements","elementOrSelector","scope","selectorCache","EventTarget","root","current","elements","querySelectorAll","from","setupGesture","gestureAbortController","AbortController","eventOptions","passive","signal","abort","isValidHover","event","pointerType","hover","onHoverStart","onPointerEnter","enterEvent","target","onHoverEnd","onPointerLeave","leaveEvent","removeEventListener","addEventListener","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isElementKeyboardAccessible","tagName","tabIndex","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","enableKeyboardPress","focusEvent","currentTarget","handleKeydown","handleKeyup","handleBlur","isValidPressEvent","press","targetOrSelector","onPressStart","targets","cancelEvents","startPress","startEvent","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","pointerDownTarget","HTMLElement","hasAttribute","record","rate","mean","values","summarise","calcAverage","avg","msToFps","ms","clearStatsBuffer","reportStats","Error","summary","layoutProjection","nodes","calculatedTargetDeltas","calculatedProjections","recordStats","newStatsBuffer","metrics","MAX_VELOCITY_DELTA","isFloat","isNaN","parseFloat","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","v","updatedAt","setPrevFrameValue","prev","setCurrent","change","notify","renderRequest","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","env","NODE_ENV","warnOnce","on","eventName","SubscriptionManager","unsubscribe","getSize","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","getVelocity","velocityPerSecond","start","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","chooseLayerType","pendingRules","css","selector","commit","id","cssText","rule","property","entries","textContent","head","appendChild","remove","removeChild","getLayerName","match","layer","filterViewAnimations","documentElement","getViewAnimations","getAnimations","hasTarget","keys","definitionNames","startViewAnimation","builder","defaultOptions","startViewTransition","ready","generatedViewAnimations","definition","valueKeyframes","valueOptions","initialValue","KeyframeEffect","targetDefinition","transitionName","animationTransition","hasOpacity","getKeyframes","some","keyframe","mixBlendMode","builders","nextBuilder","removeItem","notifyReady","processQueue","interrupt","batchedUpdates","slice","remaining","addToQueue","ViewTransitionBuilder","readyPromise","updateTarget","new","old","enter","exit","crossfade","targetData","reject","animateView","sync","cancelSync"],"sources":["C:/Users/chant/OneDrive/Documents/prog perso/site portfolio/portfolio2/Portfolio/node_modules/motion-dom/dist/cjs/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar motionUtils = require('motion-utils');\n\nconst supportsScrollTimeline = /* @__PURE__ */ motionUtils.memo(() => window.ScrollTimeline !== undefined);\n\nclass GroupAnimation {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        return Promise.all(this.animations.map((animation) => animation.finished));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nclass GroupAnimationWithThen extends GroupAnimation {\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n}\n\nconst isCSSVar = (name) => name.startsWith(\"--\");\nconst style$1 = {\n    set: (element, name, value) => {\n        isCSSVar(name)\n            ? element.style.setProperty(name, value)\n            : (element.style[name] = value);\n    },\n    get: (element, name) => {\n        return isCSSVar(name)\n            ? element.style.getPropertyValue(name)\n            : element.style[name];\n    },\n};\n\nconst isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nconst supportsPartialKeyframes = /*@__PURE__*/ motionUtils.memo(() => {\n    try {\n        document.createElement(\"div\").animate({ opacity: [1] });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n});\n\nconst pxValues = new Set([\n    // Border props\n    \"borderWidth\",\n    \"borderTopWidth\",\n    \"borderRightWidth\",\n    \"borderBottomWidth\",\n    \"borderLeftWidth\",\n    \"borderRadius\",\n    \"radius\",\n    \"borderTopLeftRadius\",\n    \"borderTopRightRadius\",\n    \"borderBottomRightRadius\",\n    \"borderBottomLeftRadius\",\n    // Positioning props\n    \"width\",\n    \"maxWidth\",\n    \"height\",\n    \"maxHeight\",\n    \"top\",\n    \"right\",\n    \"bottom\",\n    \"left\",\n    // Spacing props\n    \"padding\",\n    \"paddingTop\",\n    \"paddingRight\",\n    \"paddingBottom\",\n    \"paddingLeft\",\n    \"margin\",\n    \"marginTop\",\n    \"marginRight\",\n    \"marginBottom\",\n    \"marginLeft\",\n    // Misc\n    \"backgroundPositionX\",\n    \"backgroundPositionY\",\n]);\n\nfunction hydrateKeyframes(element, name, keyframes, pseudoElement) {\n    if (!Array.isArray(keyframes)) {\n        keyframes = [keyframes];\n    }\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] =\n                i === 0 && !pseudoElement\n                    ? style$1.get(element, name)\n                    : keyframes[i - 1];\n        }\n        if (typeof keyframes[i] === \"number\" && pxValues.has(name)) {\n            keyframes[i] = keyframes[i] + \"px\";\n        }\n    }\n    if (!pseudoElement && !supportsPartialKeyframes() && keyframes.length < 2) {\n        keyframes.unshift(style$1.get(element, name));\n    }\n    return keyframes;\n}\n\nconst activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nconst statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nconst isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\n/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = motionUtils.memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n        pseudoElement,\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nfunction isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type)) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nconst animationMaps = new WeakMap();\nconst animationMapKey = (name, pseudoElement) => `${name}:${pseudoElement}`;\nfunction getAnimationMap(element) {\n    const map = animationMaps.get(element) || new Map();\n    animationMaps.set(element, map);\n    return map;\n}\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation {\n    constructor(options) {\n        /**\n         * If we already have an animation, we don't need to instantiate one\n         * and can just use this as a controls interface.\n         */\n        if (\"animation\" in options) {\n            this.animation = options.animation;\n            return;\n        }\n        const { element, name, keyframes: unresolvedKeyframes, pseudoElement, allowFlatten = false, } = options;\n        let { transition } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        /**\n         * Stop any existing animations on the element before reading existing keyframes.\n         *\n         * TODO: Check for VisualElement before using animation state. This is a fallback\n         * for mini animate(). Do this when implementing NativeAnimationExtended.\n         */\n        const animationMap = getAnimationMap(element);\n        const key = animationMapKey(name, pseudoElement || \"\");\n        const currentAnimation = animationMap.get(key);\n        currentAnimation && currentAnimation.stop();\n        /**\n         * TODO: If these keyframes aren't correctly hydrated then we want to throw\n         * run an instant animation.\n         */\n        const keyframes = hydrateKeyframes(element, name, unresolvedKeyframes, pseudoElement);\n        motionUtils.invariant(typeof transition.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        transition = applyGeneratorOptions(transition);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.removeAnimation = () => animationMap.delete(key);\n        this.animation.onfinish = () => {\n            if (!pseudoElement) {\n                style$1.set(element, name, getFinalKeyframe(keyframes, transition));\n                this.cancel();\n            }\n        };\n        /**\n         * TODO: Check for VisualElement before using animation state.\n         */\n        animationMap.set(key, this);\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n        this.removeAnimation();\n    }\n    stop() {\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        this.commitStyles();\n        this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming().duration || 0;\n        return motionUtils.millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return motionUtils.millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.animation.currentTime = motionUtils.secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    get finished() {\n        return this.animation.finished;\n    }\n    flatten() {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline(timeline) {\n        this.animation.timeline = timeline;\n        this.animation.onfinish = null;\n        return motionUtils.noop;\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve).catch(onReject);\n    }\n}\n\nfunction getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: motionUtils.millisecondsToSeconds(duration),\n    };\n}\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\n\nfunction attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = motionUtils.MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!motionUtils.MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : motionUtils.noop, true);\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || motionUtils.MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nconst isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nfunction resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\n/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nconst isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nconst focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nconst isPressing = new WeakSet();\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (target instanceof HTMLElement) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nfunction record() {\n    const { value } = statsBuffer;\n    if (value === null) {\n        cancelFrame(record);\n        return;\n    }\n    value.frameloop.rate.push(frameData.delta);\n    value.animations.mainThread.push(activeAnimations.mainThread);\n    value.animations.waapi.push(activeAnimations.waapi);\n    value.animations.layout.push(activeAnimations.layout);\n}\nfunction mean(values) {\n    return values.reduce((acc, value) => acc + value, 0) / values.length;\n}\nfunction summarise(values, calcAverage = mean) {\n    if (values.length === 0) {\n        return {\n            min: 0,\n            max: 0,\n            avg: 0,\n        };\n    }\n    return {\n        min: Math.min(...values),\n        max: Math.max(...values),\n        avg: calcAverage(values),\n    };\n}\nconst msToFps = (ms) => Math.round(1000 / ms);\nfunction clearStatsBuffer() {\n    statsBuffer.value = null;\n    statsBuffer.addProjectionMetrics = null;\n}\nfunction reportStats() {\n    const { value } = statsBuffer;\n    if (!value) {\n        throw new Error(\"Stats are not being measured\");\n    }\n    clearStatsBuffer();\n    cancelFrame(record);\n    const summary = {\n        frameloop: {\n            rate: summarise(value.frameloop.rate),\n            read: summarise(value.frameloop.read),\n            resolveKeyframes: summarise(value.frameloop.resolveKeyframes),\n            update: summarise(value.frameloop.update),\n            preRender: summarise(value.frameloop.preRender),\n            render: summarise(value.frameloop.render),\n            postRender: summarise(value.frameloop.postRender),\n        },\n        animations: {\n            mainThread: summarise(value.animations.mainThread),\n            waapi: summarise(value.animations.waapi),\n            layout: summarise(value.animations.layout),\n        },\n        layoutProjection: {\n            nodes: summarise(value.layoutProjection.nodes),\n            calculatedTargetDeltas: summarise(value.layoutProjection.calculatedTargetDeltas),\n            calculatedProjections: summarise(value.layoutProjection.calculatedProjections),\n        },\n    };\n    /**\n     * Convert the rate to FPS\n     */\n    const { rate } = summary.frameloop;\n    rate.min = msToFps(rate.min);\n    rate.max = msToFps(rate.max);\n    rate.avg = msToFps(rate.avg);\n    [rate.min, rate.max] = [rate.max, rate.min];\n    return summary;\n}\nfunction recordStats() {\n    if (statsBuffer.value) {\n        clearStatsBuffer();\n        throw new Error(\"Stats are already being measured\");\n    }\n    const newStatsBuffer = statsBuffer;\n    newStatsBuffer.value = {\n        frameloop: {\n            rate: [],\n            read: [],\n            resolveKeyframes: [],\n            update: [],\n            preRender: [],\n            render: [],\n            postRender: [],\n        },\n        animations: {\n            mainThread: [],\n            waapi: [],\n            layout: [],\n        },\n        layoutProjection: {\n            nodes: [],\n            calculatedTargetDeltas: [],\n            calculatedProjections: [],\n        },\n    };\n    newStatsBuffer.addProjectionMetrics = (metrics) => {\n        const { layoutProjection } = newStatsBuffer.value;\n        layoutProjection.nodes.push(metrics.nodes);\n        layoutProjection.calculatedTargetDeltas.push(metrics.calculatedTargetDeltas);\n        layoutProjection.calculatedProjections.push(metrics.calculatedProjections);\n    };\n    frame.postRender(record, true);\n    return reportStats;\n}\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.7.3\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            motionUtils.warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new motionUtils.SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return motionUtils.velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nfunction chooseLayerType(valueName) {\n    if (valueName === \"layout\")\n        return \"group\";\n    if (valueName === \"enter\" || valueName === \"new\")\n        return \"new\";\n    if (valueName === \"exit\" || valueName === \"old\")\n        return \"old\";\n    return \"group\";\n}\n\nlet pendingRules = {};\nlet style = null;\nconst css = {\n    set: (selector, values) => {\n        pendingRules[selector] = values;\n    },\n    commit: () => {\n        if (!style) {\n            style = document.createElement(\"style\");\n            style.id = \"motion-view\";\n        }\n        let cssText = \"\";\n        for (const selector in pendingRules) {\n            const rule = pendingRules[selector];\n            cssText += `${selector} {\\n`;\n            for (const [property, value] of Object.entries(rule)) {\n                cssText += `  ${property}: ${value};\\n`;\n            }\n            cssText += \"}\\n\";\n        }\n        style.textContent = cssText;\n        document.head.appendChild(style);\n        pendingRules = {};\n    },\n    remove: () => {\n        if (style && style.parentElement) {\n            style.parentElement.removeChild(style);\n        }\n    },\n};\n\nfunction getLayerName(pseudoElement) {\n    const match = pseudoElement.match(/::view-transition-(old|new|group|image-pair)\\((.*?)\\)/);\n    if (!match)\n        return null;\n    return { layer: match[2], type: match[1] };\n}\n\nfunction filterViewAnimations(animation) {\n    const { effect } = animation;\n    if (!effect)\n        return false;\n    return (effect.target === document.documentElement &&\n        effect.pseudoElement?.startsWith(\"::view-transition\"));\n}\nfunction getViewAnimations() {\n    return document.getAnimations().filter(filterViewAnimations);\n}\n\nfunction hasTarget(target, targets) {\n    return targets.has(target) && Object.keys(targets.get(target)).length > 0;\n}\n\nconst definitionNames = [\"layout\", \"enter\", \"exit\", \"new\", \"old\"];\nfunction startViewAnimation(builder) {\n    const { update, targets, options: defaultOptions } = builder;\n    if (!document.startViewTransition) {\n        return new Promise(async (resolve) => {\n            await update();\n            resolve(new GroupAnimation([]));\n        });\n    }\n    // TODO: Go over existing targets and ensure they all have ids\n    /**\n     * If we don't have any animations defined for the root target,\n     * remove it from being captured.\n     */\n    if (!hasTarget(\"root\", targets)) {\n        css.set(\":root\", {\n            \"view-transition-name\": \"none\",\n        });\n    }\n    /**\n     * Set the timing curve to linear for all view transition layers.\n     * This gets baked into the keyframes, which can't be changed\n     * without breaking the generated animation.\n     *\n     * This allows us to set easing via updateTiming - which can be changed.\n     */\n    css.set(\"::view-transition-group(*), ::view-transition-old(*), ::view-transition-new(*)\", { \"animation-timing-function\": \"linear !important\" });\n    css.commit(); // Write\n    const transition = document.startViewTransition(async () => {\n        await update();\n        // TODO: Go over new targets and ensure they all have ids\n    });\n    transition.finished.finally(() => {\n        css.remove(); // Write\n    });\n    return new Promise((resolve) => {\n        transition.ready.then(() => {\n            const generatedViewAnimations = getViewAnimations();\n            const animations = [];\n            /**\n             * Create animations for each of our explicitly-defined subjects.\n             */\n            targets.forEach((definition, target) => {\n                // TODO: If target is not \"root\", resolve elements\n                // and iterate over each\n                for (const key of definitionNames) {\n                    if (!definition[key])\n                        continue;\n                    const { keyframes, options } = definition[key];\n                    for (let [valueName, valueKeyframes] of Object.entries(keyframes)) {\n                        if (!valueKeyframes)\n                            continue;\n                        const valueOptions = {\n                            ...getValueTransition(defaultOptions, valueName),\n                            ...getValueTransition(options, valueName),\n                        };\n                        const type = chooseLayerType(key);\n                        /**\n                         * If this is an opacity animation, and keyframes are not an array,\n                         * we need to convert them into an array and set an initial value.\n                         */\n                        if (valueName === \"opacity\" &&\n                            !Array.isArray(valueKeyframes)) {\n                            const initialValue = type === \"new\" ? 0 : 1;\n                            valueKeyframes = [initialValue, valueKeyframes];\n                        }\n                        /**\n                         * Resolve stagger function if provided.\n                         */\n                        if (typeof valueOptions.delay === \"function\") {\n                            valueOptions.delay = valueOptions.delay(0, 1);\n                        }\n                        valueOptions.duration && (valueOptions.duration = motionUtils.secondsToMilliseconds(valueOptions.duration));\n                        valueOptions.delay && (valueOptions.delay = motionUtils.secondsToMilliseconds(valueOptions.delay));\n                        const animation = new NativeAnimation({\n                            element: document.documentElement,\n                            name: valueName,\n                            pseudoElement: `::view-transition-${type}(${target})`,\n                            keyframes: valueKeyframes,\n                            transition: valueOptions,\n                        });\n                        animations.push(animation);\n                    }\n                }\n            });\n            /**\n             * Handle browser generated animations\n             */\n            for (const animation of generatedViewAnimations) {\n                if (animation.playState === \"finished\")\n                    continue;\n                const { effect } = animation;\n                if (!effect || !(effect instanceof KeyframeEffect))\n                    continue;\n                const { pseudoElement } = effect;\n                if (!pseudoElement)\n                    continue;\n                const name = getLayerName(pseudoElement);\n                if (!name)\n                    continue;\n                const targetDefinition = targets.get(name.layer);\n                if (!targetDefinition) {\n                    /**\n                     * If transition name is group then update the timing of the animation\n                     * whereas if it's old or new then we could possibly replace it using\n                     * the above method.\n                     */\n                    const transitionName = name.type === \"group\" ? \"layout\" : \"\";\n                    let animationTransition = {\n                        ...getValueTransition(defaultOptions, transitionName),\n                    };\n                    animationTransition.duration && (animationTransition.duration = motionUtils.secondsToMilliseconds(animationTransition.duration));\n                    animationTransition =\n                        applyGeneratorOptions(animationTransition);\n                    const easing = mapEasingToNativeEasing(animationTransition.ease, animationTransition.duration);\n                    effect.updateTiming({\n                        delay: motionUtils.secondsToMilliseconds(animationTransition.delay ?? 0),\n                        duration: animationTransition.duration,\n                        easing,\n                    });\n                    animations.push(new NativeAnimation({ animation }));\n                }\n                else if (hasOpacity(targetDefinition, \"enter\") &&\n                    hasOpacity(targetDefinition, \"exit\") &&\n                    effect\n                        .getKeyframes()\n                        .some((keyframe) => keyframe.mixBlendMode)) {\n                    animations.push(new NativeAnimation({ animation }));\n                }\n                else {\n                    animation.cancel();\n                }\n            }\n            resolve(new GroupAnimation(animations));\n        });\n    });\n}\nfunction hasOpacity(target, key) {\n    return target?.[key]?.keyframes.opacity;\n}\n\nlet builders = [];\nlet current = null;\nfunction next() {\n    current = null;\n    const [nextBuilder] = builders;\n    if (nextBuilder)\n        start(nextBuilder);\n}\nfunction start(builder) {\n    motionUtils.removeItem(builders, builder);\n    current = builder;\n    startViewAnimation(builder).then((animation) => {\n        builder.notifyReady(animation);\n        animation.finished.finally(next);\n    });\n}\nfunction processQueue() {\n    /**\n     * Iterate backwards over the builders array. We can ignore the\n     * \"wait\" animations. If we have an interrupting animation in the\n     * queue then we need to batch all preceeding animations into it.\n     * Currently this only batches the update functions but will also\n     * need to batch the targets.\n     */\n    for (let i = builders.length - 1; i >= 0; i--) {\n        const builder = builders[i];\n        const { interrupt } = builder.options;\n        if (interrupt === \"immediate\") {\n            const batchedUpdates = builders.slice(0, i + 1).map((b) => b.update);\n            const remaining = builders.slice(i + 1);\n            builder.update = () => {\n                batchedUpdates.forEach((update) => update());\n            };\n            // Put the current builder at the front, followed by any \"wait\" builders\n            builders = [builder, ...remaining];\n            break;\n        }\n    }\n    if (!current || builders[0]?.options.interrupt === \"immediate\") {\n        next();\n    }\n}\nfunction addToQueue(builder) {\n    builders.push(builder);\n    microtask.render(processQueue);\n}\n\nclass ViewTransitionBuilder {\n    constructor(update, options = {}) {\n        this.currentTarget = \"root\";\n        this.targets = new Map();\n        this.notifyReady = motionUtils.noop;\n        this.readyPromise = new Promise((resolve) => {\n            this.notifyReady = resolve;\n        });\n        this.update = update;\n        this.options = {\n            interrupt: \"wait\",\n            ...options,\n        };\n        addToQueue(this);\n    }\n    get(selector) {\n        this.currentTarget = selector;\n        return this;\n    }\n    layout(keyframes, options) {\n        this.updateTarget(\"layout\", keyframes, options);\n        return this;\n    }\n    new(keyframes, options) {\n        this.updateTarget(\"new\", keyframes, options);\n        return this;\n    }\n    old(keyframes, options) {\n        this.updateTarget(\"old\", keyframes, options);\n        return this;\n    }\n    enter(keyframes, options) {\n        this.updateTarget(\"enter\", keyframes, options);\n        return this;\n    }\n    exit(keyframes, options) {\n        this.updateTarget(\"exit\", keyframes, options);\n        return this;\n    }\n    crossfade(options) {\n        this.updateTarget(\"enter\", { opacity: 1 }, options);\n        this.updateTarget(\"exit\", { opacity: 0 }, options);\n        return this;\n    }\n    updateTarget(target, keyframes, options = {}) {\n        const { currentTarget, targets } = this;\n        if (!targets.has(currentTarget)) {\n            targets.set(currentTarget, {});\n        }\n        const targetData = targets.get(currentTarget);\n        targetData[target] = { keyframes, options };\n    }\n    then(resolve, reject) {\n        return this.readyPromise.then(resolve, reject);\n    }\n}\nfunction animateView(update, defaultOptions = {}) {\n    return new ViewTransitionBuilder(update, defaultOptions);\n}\n\n/**\n * @deprecated\n *\n * Import as `frame` instead.\n */\nconst sync = frame;\n/**\n * @deprecated\n *\n * Use cancelFrame(callback) instead.\n */\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = (process) => cancelFrame(process);\n    return acc;\n}, {});\n\nexports.GroupAnimation = GroupAnimation;\nexports.GroupAnimationWithThen = GroupAnimationWithThen;\nexports.MotionValue = MotionValue;\nexports.NativeAnimation = NativeAnimation;\nexports.ViewTransitionBuilder = ViewTransitionBuilder;\nexports.activeAnimations = activeAnimations;\nexports.animateView = animateView;\nexports.attachTimeline = attachTimeline;\nexports.calcGeneratorDuration = calcGeneratorDuration;\nexports.cancelFrame = cancelFrame;\nexports.cancelMicrotask = cancelMicrotask;\nexports.cancelSync = cancelSync;\nexports.collectMotionValues = collectMotionValues;\nexports.createGeneratorEasing = createGeneratorEasing;\nexports.createRenderBatcher = createRenderBatcher;\nexports.cubicBezierAsString = cubicBezierAsString;\nexports.frame = frame;\nexports.frameData = frameData;\nexports.frameSteps = frameSteps;\nexports.generateLinearEasing = generateLinearEasing;\nexports.getValueTransition = getValueTransition;\nexports.hover = hover;\nexports.isBezierDefinition = isBezierDefinition;\nexports.isDragActive = isDragActive;\nexports.isDragging = isDragging;\nexports.isGenerator = isGenerator;\nexports.isNodeOrChild = isNodeOrChild;\nexports.isPrimaryPointer = isPrimaryPointer;\nexports.isWaapiSupportedEasing = isWaapiSupportedEasing;\nexports.mapEasingToNativeEasing = mapEasingToNativeEasing;\nexports.maxGeneratorDuration = maxGeneratorDuration;\nexports.microtask = microtask;\nexports.motionValue = motionValue;\nexports.press = press;\nexports.recordStats = recordStats;\nexports.resolveElements = resolveElements;\nexports.setDragLock = setDragLock;\nexports.startWaapiAnimation = startWaapiAnimation;\nexports.statsBuffer = statsBuffer;\nexports.supportedWaapiEasing = supportedWaapiEasing;\nexports.supportsFlags = supportsFlags;\nexports.supportsLinearEasing = supportsLinearEasing;\nexports.supportsScrollTimeline = supportsScrollTimeline;\nexports.sync = sync;\nexports.time = time;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}